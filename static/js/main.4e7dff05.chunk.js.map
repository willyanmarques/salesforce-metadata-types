{"version":3,"sources":["components/Header/index.js","components/Table/index.js","components/Loading/index.js","App.js","index.js"],"names":["Header","search","count","handleOnChange","e","text","target","value","toLowerCase","trail","href","iconPath","className","icon","assistiveText","label","category","name","style","backgroundColor","fill","title","joined","onRenderActions","iconRight","id","placeholder","onKeyUp","info","truncate","variant","Table","items","useState","columns","key","property","fixedLayout","overflow","fixedHeader","Loading","display","size","App","data","setData","setItems","setCount","isLoading","setIsLoading","useEffect","json","require","length","filter","item","XMLName","includes","updateItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y3bA4EeA,G,MAxEA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAEtB,SAASC,EAAeC,GACpB,IAAMC,EAAOD,EAAEE,OAAOC,MAAMC,cAC5BP,EAAOI,GAGX,IA2BMI,EAAQ,CACV,8BAAM,gDAAN,IAAkC,uBAAGC,KAAK,8CAA8CJ,OAAO,UAA7D,qBAGtC,OACI,kBAAC,IAAD,CAAcK,SAAS,WACnB,yBAAKC,UAAU,cACX,kBAAC,IAAD,CACIC,KACI,kBAAC,IAAD,CACIC,cAAe,CACXC,MAAO,QAEXC,SAAS,WACTC,KAAK,OACLC,MAAO,CACHC,gBAAiB,UACjBC,KAAM,WAEVC,MAAM,SAGdC,QAAM,EACNC,gBA1CA,kBACZ,kBAAC,IAAD,CAAmBX,UAAU,qBACzB,kBAAC,IAAD,CACIY,UACI,kBAAC,IAAD,CACIV,cAAe,CACXD,KAAM,UAEVI,KAAK,SACLD,SAAS,YAGjBS,GAAG,SACHC,YAAY,SACZC,QAASxB,MA8BLM,MAAOA,EAEPmB,KAAI,UAAK1B,EAAL,UACJmB,MAAM,4BACNQ,UAAQ,EACRC,QAAQ,oB,gBCEbC,EAnED,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAESC,mBAAS,IAFlB,mBASnBC,GATmB,UAST,CAEZ,kBAAC,IAAD,CACIC,IAAI,WACJpB,MAAM,WACNqB,SAAS,UACTC,aAAW,IAGf,kBAAC,IAAD,CACIF,IAAI,WACJpB,MAAM,iBACNqB,SAAS,UACTC,aAAW,IAGf,kBAAC,IAAD,CACIF,IAAI,SACJpB,MAAM,SACNqB,SAAS,SACTC,aAAW,IAGf,kBAAC,IAAD,CACIF,IAAI,cACJpB,MAAM,iBACNqB,SAAS,cACTC,aAAW,MASnB,OACI,yBAAKzB,UAAU,YAAYM,MAAO,CAAEoB,SAAU,SAC1C,kBAAC,IAAD,CAAc3B,SAAS,WACnB,kBAAC,IAAD,CACIqB,MAAOA,EACPP,GAAG,YACHc,aAAW,EACXF,aAAW,EACXf,QAAM,GAMLY,M,QC/CNM,EAZC,WACZ,OACI,yBAAKtB,MAAO,CAAEuB,QAAS,SACnB,kBAAC,IAAD,CACIC,KAAK,SACLZ,QAAQ,QACRhB,cAAe,CAAEC,MAAO,kBCoCzB4B,G,MAvCH,WAAO,IAAD,EAEQV,mBAAS,IAFjB,mBAETW,EAFS,KAEHC,EAFG,OAGUZ,mBAAS,IAHnB,mBAGTD,EAHS,KAGFc,EAHE,OAIUb,mBAAS,GAJnB,mBAIT/B,EAJS,KAIF6C,EAJE,OAKkBd,oBAAS,GAL3B,mBAKTe,EALS,KAKEC,EALF,KAOhBC,qBAAU,WACR,IAAMC,EAAOC,EAAQ,IACrBP,EAAQM,GACRL,EAASK,GACTJ,EAASI,EAAKE,QACdJ,GAAa,KACZ,IAgBH,OACE,yBAAKrC,UAAU,OACZoC,GAAa,kBAAC,EAAD,MACd,kBAAC,EAAD,CAAQ/C,OAPC,SAACI,IAVM,SAACJ,GACnBgD,GAAa,GACb,IAAMjB,EAAQY,EAAKU,QAAO,SAACC,GACzB,OAAOA,EAAKC,QAAQhD,cAAciD,SAASxD,MAE7C6C,EAASd,GACTe,EAASf,EAAMqB,QACfJ,GAAa,GAIbS,CAAYrD,IAMYH,MAAOA,IAC7B,kBAAC,EAAD,CAAW8B,MAAOA,OClCxB2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4e7dff05.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IconSettings, Icon, PageHeader, PageHeaderControl, Input, InputIcon, Button } from '@salesforce/design-system-react';\r\nimport './styles.css';\r\n\r\nconst Header = ({ search, count }) => {\r\n\r\n    function handleOnChange(e) {\r\n        const text = e.target.value.toLowerCase();\r\n        search(text);\r\n    }\r\n\r\n    const controls = () => (\r\n        <React.Fragment>\r\n            <PageHeaderControl>\r\n            <Button label=\"copy metadata\" variant=\"brand\" onClick={() => alert('ok')}/>\r\n            </PageHeaderControl>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const actions = () => (\r\n        <PageHeaderControl className=\"pageHeaderControl\">\r\n            <Input\r\n                iconRight={\r\n                    <InputIcon\r\n                        assistiveText={{\r\n                            icon: 'Search',\r\n                        }}\r\n                        name=\"search\"\r\n                        category=\"utility\"\r\n                    />\r\n                }\r\n                id=\"search\"\r\n                placeholder=\"search\"\r\n                onKeyUp={handleOnChange}\r\n            />\r\n        </PageHeaderControl>\r\n    );\r\n\r\n    const trail = [\r\n        <spam><spam>Developer by: </spam> <a href=\"https://www.linkedin.com/in/willyanmarques/\" target=\"_blank\">Willyan Marques</a></spam>\r\n    ];\r\n\r\n    return (\r\n        <IconSettings iconPath=\"./icons\">\r\n            <div className=\"pageHeader\">\r\n                <PageHeader\r\n                    icon={\r\n                        <Icon\r\n                            assistiveText={{\r\n                                label: 'code',\r\n                            }}\r\n                            category=\"standard\"\r\n                            name=\"apex\"\r\n                            style={{\r\n                                backgroundColor: '#215ca0',\r\n                                fill: '#ffffff',\r\n                            }}\r\n                            title=\"Home\"\r\n                        />\r\n                    }\r\n                    joined\r\n                    onRenderActions={actions}\r\n                    // onRenderControls={controls}\r\n                    trail={trail}\r\n                    // label={`${count} items`}\r\n                    info={`${count} items`}\r\n                    title=\"Salesforce Metadata Types\"\r\n                    truncate\r\n                    variant=\"object-home\"\r\n                />\r\n            </div>\r\n        </IconSettings>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { DataTable, DataTableColumn, DataTableRowActions, Dropdown, IconSettings } from '@salesforce/design-system-react';\r\n\r\nconst Table = ({ items }) => {\r\n\r\n    const [selection, setSelection] = useState([]);\r\n\r\n    const onRowChange = (event, data) => {\r\n        setSelection(data.selection);\r\n        // console.log(metadata);\r\n    }\r\n\r\n    const columns = [\r\n\r\n        <DataTableColumn\r\n            key=\"xml-name\"\r\n            label=\"XML NAME\"\r\n            property=\"XMLName\"\r\n            fixedLayout\r\n        />,\r\n\r\n        <DataTableColumn\r\n            key=\"dir-name\"\r\n            label=\"DIRECTORY NAME\"\r\n            property=\"DirName\"\r\n            fixedLayout\r\n        />,\r\n\r\n        <DataTableColumn\r\n            key=\"suffix\"\r\n            label=\"SUFFIX\"\r\n            property=\"Suffix\"\r\n            fixedLayout\r\n        />,\r\n\r\n        <DataTableColumn\r\n            key=\"HasMetaFile\"\r\n            label=\"HAS META FILE?\"\r\n            property=\"HasMetaFile\"\r\n            fixedLayout\r\n        />,\r\n\r\n        // <DataTableColumn\r\n        //     key=\"child-objects\"\r\n        //     label=\"Child Objects\"\r\n        //     property=\"ChildObjects\" />,\r\n    ];\r\n\r\n    return (\r\n        <div className=\"dataTable\" style={{ overflow: 'auto' }}>\r\n            <IconSettings iconPath=\"./icons\" >\r\n                <DataTable\r\n                    items={items}\r\n                    id=\"datatable\"\r\n                    fixedHeader\r\n                    fixedLayout\r\n                    joined\r\n                    // stackedHorizontal\r\n                    // selectRows=\"checkbox\"\r\n                    // onRowChange={onRowChange}\r\n                    // selection={selection}\r\n                >\r\n                    {columns}\r\n                </DataTable>\r\n            </IconSettings>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport { Spinner } from '@salesforce/design-system-react';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <Spinner\r\n                size=\"medium\"\r\n                variant=\"brand\"\r\n                assistiveText={{ label: 'Loading...' }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport DataTable from './components/Table';\nimport Loading from './components/Loading';\nimport './App.css';\n\nconst App = () => {\n\n  const [data, setData] = useState([]);\n  const [items, setItems] = useState([]);\n  const [count, setCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const json = require('../src/assets/data.json');\n    setData(json);\n    setItems(json);\n    setCount(json.length);\n    setIsLoading(false);\n  }, []);\n\n  const updateItems = (search) => {\n    setIsLoading(true);\n    const items = data.filter((item) => {\n      return item.XMLName.toLowerCase().includes(search);\n    });\n    setItems(items);\n    setCount(items.length);\n    setIsLoading(false);\n  }\n\n  const find = (text) => {\n    updateItems(text);\n  }\n\n  return (\n    <div className=\"app\">\n      {isLoading && <Loading />}\n      <Header search={find} count={count} />\n      <DataTable items={items} />\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}